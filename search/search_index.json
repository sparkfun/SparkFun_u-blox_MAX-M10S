{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Introduction","text":"<p>The SparkFun u-blox MAX-M10S breakout is an ultra-low-power, high performance, miniaturized GNSS board that is perfect for battery operated applications that don't possess a lot of space, such as asset trackers and wearable devices. In this tutorial, we will quickly get you set up using the Qwiic ecosystem and Arduino so that you can start reading the output!</p> SparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic)            GPS-18037"},{"location":"#required-materials","title":"Required MaterialsSparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic)GPS/GNSS Magnetic Mount Antenna - 3m (SMA)SparkFun RedBoard PlusQwiic Cable - 50mmReversible USB A to C Cable - 2m","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> GPS-18037 GPS-14986 DEV-18158 PRT-14426 CAB-15424"},{"location":"#additional-gps-antenna-options","title":"Additional GPS Antenna Options","text":"<p>Below are some other GPS antenna options.</p> GPS/GNSS Embedded Antenna - 1m (SMA) GPS-14987 GPS Embedded Antenna SMA GPS-00177"},{"location":"#suggested-reading","title":"Suggested ReadingGPS Basics             I2C             Serial Basic Hookup Guide             RedBoard Hookup Guide","text":"<p>If you aren't familiar with the Qwiic system, we recommend reading here for an overview.</p> <p> Qwiic Connect System </p> <p> </p> <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p>"},{"location":"contribute/","title":"Contribute: Help Fix our Mistake!","text":"<p>Spot something wrong? Feel free to contribute our open-source design and documentation. </p>"},{"location":"contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic) repository.</li> </ul>"},{"location":"contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>Fork this repo</li> <li>Add your corrections or improvements to the markdown file</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic) repository. </li> </ul>"},{"location":"contribute/#sumbit-a-design-improvement","title":"Sumbit a Design Improvement","text":"<ol> <li>Fork this repo</li> <li>Add your design improvements</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvements, if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"contribute/#contributors","title":"Contributors","text":"<p>Let's provided some recognition to the contributors for this project!</p> <p> </p>"},{"location":"example_code/","title":"Example Code","text":"<p>We're just going to look at example two (i.e. \"Example2_NMEAParsing.ino\") which in my opinion, makes it clear the awesomeness of these GPS receivers. That is to say, talking to satellites and finding out where in the world you are.     </p> <pre><code>#include &lt;Wire.h&gt; //Needed for I2C to GPS\n\n#include \"SparkFun_u-blox_GNSS_Arduino_Library.h\" //Click here to get the library: http://librarymanager/All#SparkFun_u-blox_GNSS\nSFE_UBLOX_GNSS myGNSS;\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println(\"SparkFun u-blox Example\");\n\n  Wire.begin();\n\n  if (myGNSS.begin() == false)\n  {\n    Serial.println(F(\"u-blox GNSS module not detected at default I2C address. Please check wiring. Freezing.\"));\n    while (1);\n  }\n\n  //This will pipe all NMEA sentences to the serial port so we can see them\n  myGNSS.setNMEAOutputPort(Serial);\n}\n\nvoid loop()\n{\n  myGNSS.checkUblox(); //See if new data is available. Process bytes as they come in.\n\n  delay(250); //Don't pound too hard on the I2C bus\n</code></pre> <p>When you upload this code you'll have to wait ~24s to get a lock onto any satellites. After that first lock, the backup battery on the board will provide power to some internal systems that will allow for a hot start the next time you turn on the board. The hot start only lasts four hours, but allows you to get a lock within one second. After you get a lock the serial terminal will start listing longitude and latitude coordinates, as seen below. Make sure to set the serial monitor to 115200 baud.</p> <p> </p> <p> These are the coordinates for SparkFun HQ </p>"},{"location":"file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Attention</p> <p>This is not where customers should seek assistance on a product. If you require technical assistance or have questions about a product that is not working as expected, please head over to the SparkFun Technical Assistance page for some initial troubleshooting.  SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, you'll need a Forum Account to search product forums and post questions.</p>"},{"location":"file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun u-blox MAX-M10S repository.</li> </ul>"},{"location":"file_issue/#spot-something-wrong","title":"Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repo</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun u-blox MAX-M10S repository. </li> </ul>"},{"location":"file_issue/#does-something-not-make-sense","title":"Does something not make sense?","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board?","text":"<ul> <li>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements. (For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.)</li> <li>If part of the board's functionality is missing, please open an issue and file a feature request.</li> </ul>"},{"location":"file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, Fork this repo</li> <li>Add your design improvement(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s), if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"hard_copy/","title":"Hard copy","text":"<p>Need to download or print our hookup guide?</p> <ul> <li>Print  (Single-Page View)<ul> <li>To save as a <code>*.pdf</code> file, select the Printer or Destination labeled Save as PDF. (Instructions will vary based on the browser)</li> </ul> </li> </ul>"},{"location":"hardware_assembly/","title":"Hardware Assembly","text":"<p>At a minimum, you will need to attach an external antenna to the MAX-M10S, supply 3.3V power, and connect to one of the board's peripherals.</p>"},{"location":"hardware_assembly/#attaching-an-external-antenna","title":"Attaching an External Antenna","text":"<p>Plug in one of our patch antennas with SMA connector to the GPS board. Secure the connection using the hex nut until it is finger-tight.</p>"},{"location":"hardware_assembly/#i2c","title":"I<sup>2</sup>C","text":"<p>One method to communicate with the MAX-M10S is through I<sup>2</sup>C. The Qwiic connect system makes it quick and easy to connect the board to your system using a polarized cable. For embedded projects, you can use a Qwiic-enabled Arduino development board like the RedBoard Plus and its associated USB cable. Then plug a Qwiic cable between the RedBoard Plus and the SparkFun MAX-M10S.</p> <p>Note</p> <p>The RedBoard Plus includes a switch to adjust the logic levels to either 5V or 3.3V. It does not matter what side the switch is on for this setup to communicate with the MAX-M10S since there are logic level converters included before the Qwiic connector.</p> <p>If you're going to be soldering to the through hole pins for I<sup>2</sup>C functionality, then just attach the following lines between your chosen microcontroller's I<sup>2</sup>C and the MAX-M10S:</p> <ul> <li>SDA to SDA</li> <li>SCL to SCL</li> <li>3.3V to 3.3V</li> <li>GND to GND</li> </ul>"},{"location":"hardware_assembly/#uart","title":"UART","text":"<p>A second method to communicate with the MAX-M10S is through its serial UART. You can directly connect the GPS to the computer by connecting a USB-to-serial converter to the industry standard serial connection (aka the 'FTDI' pinout). In this case, we used an FTDI but you can use another USB-to-serial converter like the CH340. Just make sure to match the silkscreen (GRN to GRN and BLK to BLK). For a secure connection, you'll need to solder male header pins or wires to the MAX-M10S.</p> <p>You could also connect the pins to a microcontroller like the RedBoard Plus as long as the switch for the logic levels are flipped to the 3.3V side before powering the board up. You'll need to do a little bit more work as opposed to using Qwiic connect system. You'll need to attach the following lines between your chosen microcontroller's UART and the MAX-M10S:</p> <ul> <li>Tx to Rx</li> <li>Rx to Tx</li> <li>3.3V to 3.3V</li> <li>GND to GND</li> </ul>"},{"location":"hardware_overview/","title":"Hardware Overview","text":"<p>We've broken out the u-blox MAX-M10S module to a breakout. This section highlights the relevant features of the board. For more information about the IC, check out the Resources and Going Further.</p>"},{"location":"hardware_overview/#power","title":"Power","text":"<p>Power for this board should be 3.3V. There is a 3.3V pin on the PTH header along the side of the board, but you can also provide power through the Qwiic connector.</p> Top View Bottom View"},{"location":"hardware_overview/#communication-ports","title":"Communication Ports","text":"<p>Note</p> <p>The MAX-M10S differs from other modules as it only has I<sup>2</sup>C and UART. It is important to note that the board does not have SPI pins.</p>"},{"location":"hardware_overview/#qwiic-and-i2c-aka-ddc","title":"Qwiic and I<sup>2</sup>C (a.k.a. DDC)","text":"<p>There are two PTHs labeled <code>SDA</code> and <code>SCL</code> which indicates the I<sup>2</sup>C data lines. Similarly, you can just use the Qwiic connector to provide power and connect to the I<sup>2</sup>C pins. The Qwiic ecosystem is made for fast prototyping by removing the need for soldering. All you need to do is plug a Qwiic cable into the Qwiic connector and voila!</p> Top View Bottom View <p>Note</p> <p>The only I2C address for this and all u-Blox GPS products is 0x42, though each can have their address changed through software.</p>"},{"location":"hardware_overview/#uart","title":"UART","text":"<p>For users that prefer to communicate over UART, we made sure to configure the UART pin grouping to an industry standard to ensure that it easily connects to a Serial Basic. Extra UART pins are also broken out on another edge of the board as well. The port is set to 38400 baud as the default.</p> Top View Bottom View"},{"location":"hardware_overview/#control-pins","title":"Control Pins","text":"<p>These pins are used for various extra control of the MAX-M10S. The control pins are highlighted below.</p> Top View Bottom View <ul> <li>PPS: Pulse-per-second output pin. Begins blinking at 1Hz when module gets basic GPS/GNSS position lock.</li> <li>RST: Reset input pin. Pull this line low to reset the module.</li> <li>SAFE: Safeboot input pin. This is required for firmware updates to the module and generally should not be used or connected. To save on space, the silkscreen is labeled on the bottom of the board.</li> <li>EINT: Interrupt input/output pin. Can be configured using U-Center to bring the module out of deep sleep or to output an interrupt for various module states.</li> </ul>"},{"location":"hardware_overview/#sma-connector-for-antenna","title":"SMA Connector for Antenna","text":"<p>The board is populated with an SMA connector for a secure connection to a patch antenna.</p>"},{"location":"hardware_overview/#leds","title":"LEDs","text":"<p>The board includes two status LEDs as indicated in the image below.</p> <ul> <li>PPS: The pulse per second LED will illuminate each second once a position lock has been achieved.</li> <li>PWR: The power LED will illuminate when 3.3V is provided either over the Qwiic bus or any of the 3.3V PTH pins.</li> </ul>"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"<p>There are four jumpers on the back of the board. For more information, check out our tutorial on working with jumper pads and PCB traces should you decide to cut the traces with a hobby knife.</p> <ul> <li>PWR: This is connected to the PWR LED on the top of the board. Cutting this disables the LED.</li> <li>MEAS: Short for current measurement. By default, the MEAs is closed. Cutting the jumper and soldering to the PTH pads will allows you to insert a current meter and precisely monitor the how much current your application is consuming.</li> <li>PPS: This is connected to the PPS LED on the top of the board. Cutting this disables the LED.</li> <li>I<sup>2</sup>C: The I<sup>2</sup>C jumpers are open by default. By adding solder to the jumpers, it will connect to the 2.2k\u03a9 pull-up resistors for the I<sup>2</sup>C bus.  Most of the time you can leave these alone unless your project requires you to connect the pull-up resistors.</li> </ul>"},{"location":"hardware_overview/#backup-battery","title":"Backup Battery","text":"<p>The MS621FE rechargeable battery maintains the battery backed RAM (BBR) on the GNSS module. This allows for much faster position locks (a.k.a. hot start). The BBR is also used for module configuration retention. The battery is automatically trickle charged when power is applied and should maintain settings and GNSS orbit data for up to two weeks without power.</p>"},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>The overall length and width with the antenna connector is about 1.74\" x 1.20\". There are four mounting holes by each corner of the board.</p>"},{"location":"resources_and_going_further/","title":"Resources","text":"<p>Now that you've successfully got your MAX-M10S up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Datasheet (PDF)</li> <li>Protocol Manual (PDF)</li> <li>Integration Manual (PDF)</li> <li>Product Summary (PDF)</li> <li>Release Notes (PDF)</li> <li>u-blox ECCN (PDF)</li> <li>Arduino Library</li> <li>GitHub Hardware Repo</li> <li>SFE Product Showcase</li> </ul> <p>Or check out other tutorials related to GPS and GNSS:</p> SparkFun RTK L-Band Hookup Guide              Getting Started with U-Center for u-blox              GPS-RTK2 Hookup Guide              SparkFun GPS Breakout (ZOE-M8Q and SAM-M8Q) Hookup Guide"},{"location":"single_page/","title":"Introduction","text":"<p>The SparkFun u-blox MAX-M10S breakout is an ultra-low-power, high performance, miniaturized GNSS board that is perfect for battery operated applications that don't possess a lot of space, such as asset trackers and wearable devices. In this tutorial, we will quickly get you set up using the Qwiic ecosystem and Arduino so that you can start reading the output!</p> SparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic)            GPS-18037"},{"location":"single_page/#required-materials","title":"Required MaterialsSparkFun GNSS Receiver Breakout - MAX-M10S (Qwiic)GPS/GNSS Magnetic Mount Antenna - 3m (SMA)SparkFun RedBoard PlusQwiic Cable - 50mmReversible USB A to C Cable - 2m","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> GPS-18037 GPS-14986 DEV-18158 PRT-14426 CAB-15424"},{"location":"single_page/#additional-gps-antenna-options","title":"Additional GPS Antenna Options","text":"<p>Below are some other GPS antenna options.</p> GPS/GNSS Embedded Antenna - 1m (SMA) GPS-14987 GPS Embedded Antenna SMA GPS-00177"},{"location":"single_page/#suggested-reading","title":"Suggested ReadingGPS Basics             I2C             Serial Basic Hookup Guide             RedBoard Hookup Guide","text":"<p>If you aren't familiar with the Qwiic system, we recommend reading here for an overview.</p> <p> Qwiic Connect System </p> <p> </p> <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p>"},{"location":"single_page/#hardware-overview","title":"Hardware Overview","text":"<p>We've broken out the u-blox MAX-M10S module to a breakout. This section highlights the relevant features of the board. For more information about the IC, check out the Resources and Going Further.</p>"},{"location":"single_page/#power","title":"Power","text":"<p>Power for this board should be 3.3V. There is a 3.3V pin on the PTH header along the side of the board, but you can also provide power through the Qwiic connector.</p> Top View Bottom View"},{"location":"single_page/#communication-ports","title":"Communication Ports","text":"<p>Note</p> <p>The MAX-M10S differs from other modules as it only has I<sup>2</sup>C and UART. It is important to note that the board does not have SPI pins.</p>"},{"location":"single_page/#qwiic-and-i2c-aka-ddc","title":"Qwiic and I<sup>2</sup>C (a.k.a. DDC)","text":"<p>There are two PTHs labeled <code>SDA</code> and <code>SCL</code> which indicates the I<sup>2</sup>C data lines. Similarly, you can just use the Qwiic connector to provide power and connect to the I<sup>2</sup>C pins. The Qwiic ecosystem is made for fast prototyping by removing the need for soldering. All you need to do is plug a Qwiic cable into the Qwiic connector and voila!</p> Top View Bottom View <p>Note</p> <p>The only I2C address for this and all u-Blox GPS products is 0x42, though each can have their address changed through software.</p>"},{"location":"single_page/#uart","title":"UART","text":"<p>For users that prefer to communicate over UART, we made sure to configure the UART pin grouping to an industry standard to ensure that it easily connects to a Serial Basic. Extra UART pins are also broken out on another edge of the board as well. The port is set to 38400 baud as the default.</p> Top View Bottom View"},{"location":"single_page/#control-pins","title":"Control Pins","text":"<p>These pins are used for various extra control of the MAX-M10S. The control pins are highlighted below.</p> Top View Bottom View <ul> <li>PPS: Pulse-per-second output pin. Begins blinking at 1Hz when module gets basic GPS/GNSS position lock.</li> <li>RST: Reset input pin. Pull this line low to reset the module.</li> <li>SAFE: Safeboot input pin. This is required for firmware updates to the module and generally should not be used or connected. To save on space, the silkscreen is labeled on the bottom of the board.</li> <li>EINT: Interrupt input/output pin. Can be configured using U-Center to bring the module out of deep sleep or to output an interrupt for various module states.</li> </ul>"},{"location":"single_page/#sma-connector-for-antenna","title":"SMA Connector for Antenna","text":"<p>The board is populated with an SMA connector for a secure connection to a patch antenna.</p>"},{"location":"single_page/#leds","title":"LEDs","text":"<p>The board includes two status LEDs as indicated in the image below.</p> <ul> <li>PPS: The pulse per second LED will illuminate each second once a position lock has been achieved.</li> <li>PWR: The power LED will illuminate when 3.3V is provided either over the Qwiic bus or any of the 3.3V PTH pins.</li> </ul>"},{"location":"single_page/#jumpers","title":"Jumpers","text":"<p>There are four jumpers on the back of the board. For more information, check out our tutorial on working with jumper pads and PCB traces should you decide to cut the traces with a hobby knife.</p> <ul> <li>PWR: This is connected to the PWR LED on the top of the board. Cutting this disables the LED.</li> <li>MEAS: Short for current measurement. By default, the MEAs is closed. Cutting the jumper and soldering to the PTH pads will allows you to insert a current meter and precisely monitor the how much current your application is consuming.</li> <li>PPS: This is connected to the PPS LED on the top of the board. Cutting this disables the LED.</li> <li>I<sup>2</sup>C: The I<sup>2</sup>C jumpers are open by default. By adding solder to the jumpers, it will connect to the 2.2k\u03a9 pull-up resistors for the I<sup>2</sup>C bus.  Most of the time you can leave these alone unless your project requires you to connect the pull-up resistors.</li> </ul>"},{"location":"single_page/#backup-battery","title":"Backup Battery","text":"<p>The MS621FE rechargeable battery maintains the battery backed RAM (BBR) on the GNSS module. This allows for much faster position locks (a.k.a. hot start). The BBR is also used for module configuration retention. The battery is automatically trickle charged when power is applied and should maintain settings and GNSS orbit data for up to two weeks without power.</p>"},{"location":"single_page/#board-dimensions","title":"Board Dimensions","text":"<p>The overall length and width with the antenna connector is about 1.74\" x 1.20\". There are four mounting holes by each corner of the board.</p>"},{"location":"single_page/#hardware-assembly","title":"Hardware Assembly","text":"<p>At a minimum, you will need to attach an external antenna to the MAX-M10S, supply 3.3V power, and connect to one of the board's peripherals.</p>"},{"location":"single_page/#attaching-an-external-antenna","title":"Attaching an External Antenna","text":"<p>Plug in one of our patch antennas with SMA connector to the GPS board. Secure the connection using the hex nut until it is finger-tight.</p>"},{"location":"single_page/#i2c","title":"I<sup>2</sup>C","text":"<p>One method to communicate with the MAX-M10S is through I<sup>2</sup>C. The Qwiic connect system makes it quick and easy to connect the board to your system using a polarized cable. For embedded projects, you can use a Qwiic-enabled Arduino development board like the RedBoard Plus and its associated USB cable. Then plug a Qwiic cable between the RedBoard Plus and the SparkFun MAX-M10S.</p> <p>Note</p> <p>The RedBoard Plus includes a switch to adjust the logic levels to either 5V or 3.3V. It does not matter what side the switch is on for this setup to communicate with the MAX-M10S since there are logic level converters included before the Qwiic connector.</p> <p>If you're going to be soldering to the through hole pins for I<sup>2</sup>C functionality, then just attach the following lines between your chosen microcontroller's I<sup>2</sup>C and the MAX-M10S:</p> <ul> <li>SDA to SDA</li> <li>SCL to SCL</li> <li>3.3V to 3.3V</li> <li>GND to GND</li> </ul>"},{"location":"single_page/#uart_1","title":"UART","text":"<p>A second method to communicate with the MAX-M10S is through its serial UART. You can directly connect the GPS to the computer by connecting a USB-to-serial converter to the industry standard serial connection (aka the 'FTDI' pinout). In this case, we used an FTDI but you can use another USB-to-serial converter like the CH340. Just make sure to match the silkscreen (GRN to GRN and BLK to BLK). For a secure connection, you'll need to solder male header pins or wires to the MAX-M10S.</p> <p>You could also connect the pins to a microcontroller like the RedBoard Plus as long as the switch for the logic levels are flipped to the 3.3V side before powering the board up. You'll need to do a little bit more work as opposed to using Qwiic connect system. You'll need to attach the following lines between your chosen microcontroller's UART and the MAX-M10S:</p> <ul> <li>Tx to Rx</li> <li>Rx to Tx</li> <li>3.3V to 3.3V</li> <li>GND to GND</li> </ul>"},{"location":"single_page/#software-setup-and-programming","title":"Software Setup and Programming","text":"<p>Note</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino, please review our tutorial on installing the Arduino IDE. If you have not previously installed an Arduino library, please check out our installation guide.</p> <p>If you've never connected an FTDI or CH340 to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our How to Install FTDI Drivers or How to Install CH340 Drivers tutorial for help with the installation.</p> <p>All of our u-blox based GPS boards share the same library: this board, their predeccesors and the higher precision u-blox cousins. The SparkFun u-blox Arduino library can be downloaded with the Arduino library manager by searching 'SparkFun u-blox GNSS' or you can grab the zip here from the GitHub repository to manually install:</p> SparkFun U-blox Arduino Library (ZIP) <p>There are several example sketches provided that utilize the I<sup>2</sup>C bus to get you up and receiving messages from space. We'll go over one of the examples in this tutorial.</p> <p>Note</p> <p>Example 2 uses the 'MicroNMEA' library by Steve Marple. Make sure to install the library as well by searching for it in the Arduino library manager. You could also grab the zip here from the GitHub repository to manually install.</p> <p> MicroNMEA Arduino Library (ZIP)</p>"},{"location":"single_page/#example-code","title":"Example Code","text":"<p>We're just going to look at example two (i.e. \"Example2_NMEAParsing.ino\") which in my opinion, makes it clear the awesomeness of these GPS receivers. That is to say, talking to satellites and finding out where in the world you are.     </p> <pre><code>#include &lt;Wire.h&gt; //Needed for I2C to GPS\n\n#include \"SparkFun_u-blox_GNSS_Arduino_Library.h\" //Click here to get the library: http://librarymanager/All#SparkFun_u-blox_GNSS\nSFE_UBLOX_GNSS myGNSS;\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println(\"SparkFun u-blox Example\");\n\n  Wire.begin();\n\n  if (myGNSS.begin() == false)\n  {\n    Serial.println(F(\"u-blox GNSS module not detected at default I2C address. Please check wiring. Freezing.\"));\n    while (1);\n  }\n\n  //This will pipe all NMEA sentences to the serial port so we can see them\n  myGNSS.setNMEAOutputPort(Serial);\n}\n\nvoid loop()\n{\n  myGNSS.checkUblox(); //See if new data is available. Process bytes as they come in.\n\n  delay(250); //Don't pound too hard on the I2C bus\n</code></pre> <p>When you upload this code you'll have to wait ~24s to get a lock onto any satellites. After that first lock, the backup battery on the board will provide power to some internal systems that will allow for a hot start the next time you turn on the board. The hot start only lasts four hours, but allows you to get a lock within one second. After you get a lock the serial terminal will start listing longitude and latitude coordinates, as seen below. Make sure to set the serial monitor to 115200 baud.</p> <p> </p> <p> These are the coordinates for SparkFun HQ </p>"},{"location":"single_page/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"},{"location":"single_page/#resources","title":"Resources:","text":"<p>Now that you've successfully got your MAX-M10S up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Datasheet (PDF)</li> <li>Protocol Manual (PDF)</li> <li>Integration Manual (PDF)</li> <li>Product Summary (PDF)</li> <li>Release Notes (PDF)</li> <li>u-blox ECCN (PDF)</li> <li>Arduino Library</li> <li>GitHub Hardware Repo</li> <li>SFE Product Showcase</li> </ul> <p>Or check out other tutorials related to GPS and GNSS:</p> SparkFun RTK L-Band Hookup Guide              Getting Started with U-Center for u-blox              GPS-RTK2 Hookup Guide              SparkFun GPS Breakout (ZOE-M8Q and SAM-M8Q) Hookup Guide"},{"location":"software_setup_and_programming/","title":"Software Setup and Programming","text":"<p>Note</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino, please review our tutorial on installing the Arduino IDE. If you have not previously installed an Arduino library, please check out our installation guide.</p> <p>If you've never connected an FTDI or CH340 to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our How to Install FTDI Drivers or How to Install CH340 Drivers tutorial for help with the installation.</p> <p>All of our u-blox based GPS boards share the same library: this board, their predeccesors and the higher precision u-blox cousins. The SparkFun u-blox Arduino library can be downloaded with the Arduino library manager by searching 'SparkFun u-blox GNSS' or you can grab the zip here from the GitHub repository to manually install:</p> SparkFun U-blox Arduino Library (ZIP) <p>There are several example sketches provided that utilize the I<sup>2</sup>C bus to get you up and receiving messages from space. We'll go over one of the examples in this tutorial.</p> <p>Note</p> <p>Example 2 uses the 'MicroNMEA' library by Steve Marple. Make sure to install the library as well by searching for it in the Arduino library manager. You could also grab the zip here from the GitHub repository to manually install.</p> <p> MicroNMEA Arduino Library (ZIP)</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"}]}